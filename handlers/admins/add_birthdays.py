import sqlite3
from datetime import datetime

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton

from data.config import load_config
from filters import PrivateChatFilter, AdminFilter
from state import state_add_birthday

config = load_config('.env')  # Load the configuration from .env file

router = Router(name='add_birthdays')


@router.message(F.text == "‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è")
@router.message(Command('add_bd'), PrivateChatFilter(), AdminFilter())
async def cmd_add_birthday(message: Message, state: FSMContext):
    kb_cancel = InlineKeyboardMarkup(row_width=1,
                                     inline_keyboard=[
                                         [
                                             InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='quit_add')
                                         ]
                                     ])
    msg_familiya = await message.reply('<b>–í–≤–µ–¥–∏—Ç–µ –§–∞–º–∏–ª–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤, –ü–µ—Ç—Ä–æ–≤, –°–º–∏—Ä–Ω–æ–≤):</b> ',
                                       reply_markup=kb_cancel)
    await state.update_data(msg_1=msg_familiya)
    await state.set_state(state_add_birthday.familiya)


@router.message(state_add_birthday.familiya, PrivateChatFilter(), AdminFilter())
async def process_add_familiya(message: Message, state: FSMContext):
    your_familiya = message.text.strip()  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–¥–∞–ª–∏–ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã
    if not your_familiya or your_familiya.isspace():
        await message.reply('‚ùå –§–∞–º–∏–ª–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ü–∏—Ñ—Ä
    if any(char.isdigit() for char in your_familiya):
        await message.reply('‚ùå –§–∞–º–∏–ª–∏—è –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã –∫ –∑–∞–≥–ª–∞–≤–Ω–æ–π
    your_familiya = your_familiya.capitalize()
    await state.update_data(your_familiya=your_familiya)

    await state.set_state(state_add_birthday.familiya_plural)
    await message.reply(
        ' <b>–í–≤–µ–¥–∏—Ç–µ –§–∞–º–∏–ª–∏—é –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ (—É –∫–æ–≥–æ?) (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤–∞, –ü–µ—Ç—Ä–æ–≤–∞, –°–º–∏—Ä–Ω–æ–≤–∞):</b>')


@router.message(state_add_birthday.familiya_plural, PrivateChatFilter(), AdminFilter())
async def process_add_familiya_plural(message: Message, state: FSMContext):
    your_plural_familiya = message.text.strip()  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–¥–∞–ª–∏–ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã
    if not your_plural_familiya or your_plural_familiya.isspace():
        await message.reply('‚ùå –§–∞–º–∏–ª–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ü–∏—Ñ—Ä
    if any(char.isdigit() for char in your_plural_familiya):
        await message.reply('‚ùå –§–∞–º–∏–ª–∏—è –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã –∫ –∑–∞–≥–ª–∞–≤–Ω–æ–π
    plural_familiya = your_plural_familiya.capitalize()
    await state.update_data(familiya_piural=plural_familiya)

    await state.set_state(state_add_birthday.name)
    await message.reply('<b>–í–≤–µ–¥–∏—Ç–µ –ò–º—è:</b> ')


@router.message(state_add_birthday.name, PrivateChatFilter(), AdminFilter())
async def process_add_name(message: Message, state: FSMContext):
    your_name = message.text.strip()  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–¥–∞–ª–∏–ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã
    if not your_name or your_name.isspace():
        await message.reply('‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ü–∏—Ñ—Ä
    if any(char.isdigit() for char in your_name):
        await message.reply('‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã –∫ –∑–∞–≥–ª–∞–≤–Ω–æ–π
    your_name = your_name.capitalize()
    await state.update_data(your_name=your_name)

    await state.set_state(state_add_birthday.name_plural)
    await message.reply(' <b>–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ê–ª–µ–∫—Å–µ—è, –ê–Ω–¥—Ä–µ—è, –ê–Ω–Ω—ã):</b>')


@router.message(state_add_birthday.name_plural, PrivateChatFilter(), AdminFilter())
async def process_add_name(message: Message, state: FSMContext):
    your_plural_name = message.text.strip()  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–¥–∞–ª–∏–ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã
    if not your_plural_name or your_plural_name.isspace():
        await message.reply('‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ü–∏—Ñ—Ä
    if any(char.isdigit() for char in your_plural_name):
        await message.reply('‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã –∫ –∑–∞–≥–ª–∞–≤–Ω–æ–π
    plural_name = your_plural_name.capitalize()
    await state.update_data(name_piural=plural_name)

    await state.set_state(state_add_birthday.date)
    await message.reply('üìÜ <b>–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–≥–≥–≥-–º–º-–¥–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2000-01-01)</b>')


@router.message(state_add_birthday.date, PrivateChatFilter(), AdminFilter())
async def birthday_date(message: Message, state: FSMContext):
    try:
        birthday_date = datetime.strptime(message.text, '%Y-%m-%d').date()
        await state.update_data(date=birthday_date)
    except ValueError:
        await message.reply('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        return
    data = await state.get_data()
    your_familiya = data.get('your_familiya')
    your_familiya_plural = data.get('familiya_piural')
    your_name = data.get('your_name')
    your_plural = data.get('name_piural')
    your_date = data.get('date')
    msg_id = data.get('msg_1')

    conn = sqlite3.connect(config.tg_bot.DB_FILE)
    cursor = conn.cursor()

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("INSERT INTO birthdays (birthday, first_name, last_name, edit_firstname, edit_lastname) VALUES (?, ?, ?, ?, ?)",
                   (your_date, your_familiya, your_name, your_familiya_plural, your_plural))
    conn.commit()

    conn.close()  # –ó–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ

    await state.clear()
    await msg_id.delete()
    await message.reply(f'‚úÖ | <b>{your_familiya}</b> <b>{your_name}</b> | <b>{your_date}</b> | —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')


@router.callback_query(F.data.startswith('quit_add'), PrivateChatFilter(), AdminFilter())
async def quit_add(call: CallbackQuery, state: FSMContext) -> None:
    """
    Handles the 'quit' callback query, cancels the message sending process and informs the user.

    :param call: The CallbackQuery object representing the callback.
    :type call: aiogram.types.CallbackQuery
    :param state: The FSMContext object to manage bot states.
    :type state: aiogram.fsm.context.FSMContext
    """
    await state.clear()
    await call.message.delete()
    await call.message.answer('‚ùå <b>–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>')
